openssl aes-256-cbc -salt -pbkdf2 -in inkyung.zip -out inkyung.zip.aes
enter aes-256-cbc encryption password:
Verifying - enter aes-256-cbc encryption password:
encrypted.
openssl aes-256-cbc -d -salt -pbkdf2 -in inkyug.zip.aes -out inkyung.zip


https://codingbee.net/centos/openssl-demo-encrypting-decrypting-files-using-both-symmetric-and-asymmetric-encryption

openssl aes-256-cbc -e -in secrets.txt -out secrets.txt.enc
openssl aes-256-cbc -d -in secrets.txt.enc -out secrets.txt or anything

first create a key-file:
openssl rand 128 > symmetric_keyfile.key
openssl enc -in secrets.txt -out secrets.txt.enc -e -aes256 -k symmetric_keyfile.key
openssl enc -in secrets.txt.enc -out secrets.txt.decrypted -d -aes256 -k symmetric_keyfile.key

Encrypting and Decrypting data using Asymmetric encryption
openssl rsa -pubout -in private_key.pem -out public_key.pem
openssl rsautl -encrypt -inkey public_key.pem -pubin -in PlainTextFile.txt -out EncryptedData.encrypted
openssl rsautl -decrypt -inkey private_key.pem -in EncryptedData.encrypted -out DecryptedData.txt   

Encrypting with the Private Key and Decrypting with the Public Key
cat PlainTextFile.txt |  openssl rsautl -inkey private_key.pem -sign > data_thats_encrypted_with_private_key.encrypted
openssl rsautl -inkey public_key.pem -pubin -in data_thats_encrypted_with_private_key.encrypted

creating a Certificate Signing Request (CSR) file and getting it signed by a Certificate Authority.
md5sum public_key.pem | openssl rsautl -inkey private_key.pem -sign > checksum.signed  
openssl rsautl -inkey public_key.pem -pubin -in checksum.signed

md5sum public_key.pem

